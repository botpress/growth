name: Deploy Plugins
description: Deploy plugins to Botpress

inputs:
  environment:
    description: "Environment to deploy to (staging/production)"
    required: true
  extra_filter:
    description: "Extra filter for plugins to deploy"
    required: false
    default: ""
  force:
    description: "Force re-deploying plugins"
    required: false
    default: "false"
  token_cloud_ops_account:
    description: "Botpress token for cloud ops account"
    required: true
  cloud_ops_workspace_id:
    description: "Botpress workspace ID for cloud ops"
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to Botpress
      shell: bash
      run: |
        pnpm bp login -y --token ${{ inputs.token_cloud_ops_account }} --workspace-id ${{ inputs.cloud_ops_workspace_id }}

    - name: Deploy plugins
      shell: bash
      run: |
        echo "Deploying plugins to ${{ inputs.environment }} environment"

        # Check if plugins directory exists
        if [ -d "plugins" ]; then
          cd plugins
          for plugin in */; do
            if [ -d "$plugin" ]; then
              plugin_name=${plugin%/}
              echo "Deploying plugin: $plugin_name"
              
              # Skip if extra_filter excludes this plugin
              if [ -n "${{ inputs.extra_filter }}" ]; then
                if echo "$plugin_name" | grep -E "${{ inputs.extra_filter }}" > /dev/null; then
                  echo "Skipping $plugin_name due to filter"
                  continue
                fi
              fi
              
              cd "$plugin_name"
              
              # Build the plugin
              echo "Building $plugin_name..."
              pnpm exec bp build
              
              # Deploy the plugin
              echo "Deploying $plugin_name..."
              if [ "${{ inputs.force }}" = "true" ]; then
                pnpm exec bp deploy --force
              else
                pnpm exec bp deploy
              fi
              
              cd ..
            fi
          done
        else
          echo "No plugins directory found, skipping plugin deployment"
        fi
